View(x)
View(Boston)
getMethod(cv.glmnet)
getMethod("cv.glmnet")
showMethods(cv.glmnet)
?cv.glmnet
source('~/.active-rstudio-document', echo=TRUE)
rm(predict)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?predict
midSquare <- function(int){
n <- nchar(int)
int <- int^2
m <- nchar(int)
if(m%%2 == 0){
mid <- (m/2)
} else {
mid <- ceiling(m/2)
}
if(n%%2 == 0){
start <- mid - (n/2 - 1)
} else {
start <- mid - floor(n/2)
}
end <- start + n
res <- as.numeric(substr(int, start, end))
return(res)
}
midSquare(3792)
3792^2
midSquare <- function(int){
n <- nchar(int)
int <- int^2
m <- nchar(int)
if(m%%2 == 0){
mid <- (m/2)
} else {
mid <- ceiling(m/2)
}
if(n%%2 == 0){
start <- mid - (n/2 - 1)
} else {
start <- mid - floor(n/2)
}
end <- start + n - 1
res <- as.numeric(substr(int, start, end))
return(res)
}
midSquare(3792)
3792^2
?append
}
conGen <- function(seed, n){
arr <- c(seed)
x <- seed
for(i in 1:n){
function(x){
x <- (5*x + 7)%%256
append(arr, x)
}
}
}
conGen(5)
conGen(5, 5)
conGen <- function(seed, n){
arr <- c(seed)
x <- seed
for(i in 1:n){
function(x){
x <- (5*x + 7)%%256
append(arr, x)
}
}
return(arr)
}
conGen(5, 5)
rep(0, 5)
50%%52
2%%3
3%%2
conGen <- function(seed, n, m){
arr <- rep(0, n)
arr[1] <- seed
for(i in 1:n){
arr[i+1] <- (5*arr[i] + 7)%%m
}
u <- arr/m
return(u)
}
conGen(0, 10, 256)
conGen <- function(seed, n, m){
arr <- rep(0, n)
arr[1] <- seed
for(i in 1:n){
arr[i+1] <- (5*arr[i] + 7)%%m
}
u <- arr/m
return(list(arr, u)
}
conGen <- function(seed, n, m){
arr <- rep(0, n)
arr[1] <- seed
for(i in 1:n){
arr[i+1] <- (5*arr[i] + 7)%%m
}
u <- arr/m
return(list(arr, u))
}
conGen(0, 10, 256)
conGen(0, 20, 256)
res <- conGen
rm(x)
rm(res)
res <- conGen(0, 20, 256)
res
res[1]
plot(res[2])
plot(res[2], 1:length(res[1]))
?plot
plot(res[2], c(1:length(res[2])))
nums <- c(1:length(res[1]))
nums
res[1]
res[1][1]
res[1][1][1]
res[[1]]
res[[1]][1]
nums <- c(1:length(res[[1]]))
nums
plot(res[2], nums)
nums <- c(0:length(res[[1]]))
nums
nums <- c(0:length(res[[1]])-1)
plot(res[2], nums)
length(res[2])
conGen <- function(seed, n, m){
arr <- rep(0, n)
arr[1] <- seed
for(i in 1:n){
arr[i+1] <- (5*arr[i] + 7)%%m
}
u <- arr/m
return(list(Arr = arr,U = u))
}
res <- conGen(0, 20, 256)
res
res$Arr.length
length(res$Arr)
res$Arr
res$U
hist(res$U)
hist(res$U, 20)
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.0/library")
qplot(res$U)
qplot(Uniform, res$U)
ggplot(res, aes(res$U)) + geom_histogram()
ggplot(res$U) + geom_histogram()
ggplot(res[1], aes(res$U)) + geom_histogram()
ggplot(data=res, aes(res$U)) + geom_histogram()
data.frame(unlist(res))
?data.frae
?data.frame
res <- conGen(0, 20, 256)
res
df <- data.frame(res[[2]])
df
conGen <- function(seed, n, m){
arr <- rep(0, n)
arr[1] <- seed
for(i in 1:n){
arr[i+1] <- (5*arr[i] + 7)%%m
}
u <- arr/m
return(data.frame(u))
}
res <- conGen(0, 20, 256)
res
hist(res)
qplot(res)
hist(res$unif)
res$unif
res$u
hist(res$u)
conGen <- function(seed, n, m){
arr <- rep(0, n)
arr[1] <- seed
for(i in 1:n){
arr[i+1] <- (5*arr[i] + 7)%%m
}
unif <- arr/m
return(data.frame(unif))
}
res <- conGen(0, 100, 256)
res
qplot(res$unif)
ggplot(data = res, aes(res$unif)) + geom_hist()
ggplot(data = res, aes(res$unif)) + geom_histogram()
p <- ggplot(data = res, aes(res$unif))
+ geom_histogram()
+ labs(title = "Simulated Uniform Distribution")
+ labs(x = "Number", y = "Frequency")
p <- ggplot(data = res, aes(res$unif))
+ geom_histogram()
+ labs(title = "Simulated Uniform Distribution")
+ xlab("Number")
+ ylab("Frequency")
conGen <- function(seed, n, m){
arr <- rep(0, n)
arr[1] <- seed
for(i in 1:n-1){
arr[i+1] <- (5*arr[i] + 7)%%m
}
unif <- arr/m
return(data.frame(unif))
}
res <- conGen(0, 100, 256)
res
ggplot(data = res, aes(res$unif)) + geom_histogram()
ggplot(data = res, aes(res$unif)) + geom_histogram() + ggtitle("Title title title")
ggplot(data = res, aes(res$unif)) + geom_histogram() + ggtitle("Simulated") + xlab("Uniform") + ylab("Frequency")
ggplot(data = res, aes(res$unif, binwidth =  1/50)) + geom_histogram() + ggtitle("Simulated") + xlab("Uniform") + ylab("Frequency")
ggplot(data = res, aes(res$unif)) + geom_histogram(binwidth = 1/50) + ggtitle("Simulated") + xlab("Uniform") + ylab("Frequency")
ggplot(data = res, aes(res$unif)) + geom_histogram(binwidth = 1/50) + ggtitle("Simulated") + xlab("Uniform") + ylab("Frequency") + ylim(0,100)
install.packages("ggthemes")
vignette("ggthemes")
ggplot(data = res, aes(res$unif)) + geom_histogram(binwidth = 1/50) + ggtitle("Simulated") + xlab("Uniform") + ylab("Frequency") + ylim(0,100) + theme_tufte()
library("ggtheme")
library("ggthemes")
version
install.packages("installr") # install
installr::updateR() # updating R.
install.packages(c("arules", "arulesViz", "BH", "boot", "car", "caret", "class", "cluster", "codetools", "devtools", "dplyr", "e1071", "evaluate", "foreign", "gdata", "geosphere", "ggmap", "ggvis", "gplots", "gridExtra", "gtools", "Hmisc", "HSAUR2", "httpuv", "httr", "igraph", "jsonlite", "kernlab", "KernSmooth", "knitr", "lattice", "LifeTables", "lme4", "manipulate", "mapproj", "maps", "MASS", "Matrix", "mclust", "mgcv", "mime", "multcomp", "mvtnorm", "nlme", "nnet", "plyr", "quantreg", "R6", "Rcpp", "RcppEigen", "RCurl", "rmarkdown", "rms", "rpart", "scales", "scatterplot3d", "seriation", "shiny", "sp", "SparseM", "spatial", "stringr", "survival", "TSP", "vcd", "XML"))
library("installr")
installr::updateR()
version
library(ggthemes)
library("ggthemes")
library("ggtheme")
?ggthemes
?"ggthemes"
?ggplot
library(installr)
copy.packages.between.libraries
copy.packages.between.libraries()
?ggthemes
?base
?ggplot
?gdata
?digest
?maps
?base
version
fx = function(x){x*x};
x = 1:50;
y = fx(x);
curve(y);
fx = function(x){x*x};
x = 1:50;
#y = fx(x);
curve(fx(x));
fx = function(x){1/e^x};
x = 1:50;
#y = fx(x);
curve(fx(x));
fx = function(x){1/exp(x)};
x = 1:50;
#y = fx(x);
curve(fx(x));
integrate(fx(x))
integrate(fx)
integrate(fx, Inf, Inf)
integrate(fx, 0, Inf)
lambda <- 5
fx <- function(x){ lambda / exp(x * lambda) };
x <- 1:50;
#y <- fx(x);
curve(fx(x));
integrate(fx, 0, Inf)
lambda <- 5
fx <- function(x){ lambda / exp(x*5) };
x <- 1:50;
#y <- fx(x);
curve(fx(x));
lambda <- 5
fx <- function(x){ 5 / exp(x*5) };
x <- 1:50;
#y <- fx(x);
curve(fx(x));
integrate(fx, 0, Inf)
lambda <- 5
fx <- function(x){ 10 / exp(x*10) };
x <- 1:50;
#y <- fx(x);
curve(fx(x));
integrate(fx, 0, Inf)
mean(fx(x))
curve(fx());
x <- 1:100;
#y <- fx(x);
curve(fx(x));
mean(fx(x))
fx <- function(x){ 10 / exp(x*10) };
x <- 1:100;
#y <- fx(x);
curve(fx(x));
integrate(fx, 0, Inf)
mean(fx(x))
-1000000/(105^3)
-1.37-0.58-0.86-1
(-1.37-0.58-0.86-1)/4
(-1.3717-0.5787-0.863-1)/4
(-1.3717-0.5787-0.863)/3
19*22
418^.5
(418^.5 +41)/4
((19^3 + 22^3)/2)^(1/3)
((19^-3 + 22^-3)/2)^(-1/3)
((19^0.5 + 22^0.5)/2)^(2)
17*17
install.packages("readxl")
#Time Series Analysis Laboratory 1
#Plotting Time Series
packages <- c("ggplot2", "readxl")
lapply(packages, library, character.only = TRUE)
read_excel("C:/Users/Dan Jordan/Documents/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data")
lab1_data <- read.csv("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls", sep="")
View(lab1_data)
rm(lab1_data)
read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
dat <- read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
head(dat)
View(dat)
?ts
dat <- ts(dat)
view(dat)
View(dat)
plot(dat$`Series 1`)
plot(dat[0,1])
plot(dat[,1])
plot(dat[,2])
plot(dat[,3])
plot(dat[,4])
plot(dat[,5])
plot(dat[,6])
install.packages("ggfortify")
lapply(packages, library, character.only = TRUE)
dat <- read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
autoplot(dat$`Series 1`)
qplot(dat$`Series 1`)
?autoplot
fortify(dat)
#dat <- ts(dat)
#create time series plots
autoplot(dat$`Series 1`)
dat <- ts(dat)
autoplot(dat$`Series 1`)
autoplot(dat[,1])
packages <- c("ggplot2", "readxl", "ggfortify")
lapply(packages, library, character.only = TRUE)
#import time series data and preview
dat <- read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
dat <- ts(dat)
#create time series plots
autoplot(dat[,1])
autoplot(dat[,2])
autoplot(dat[,6])
?which.min
which.is(is.na(dat[,1]))
which.min(is.na(dat[,1]))
which.max(is.na(dat[,1]))
endInd <- lapply(dat, which.max(is.na(dat[,1])))
endInd <- lapply(dat, which.max(is.na()))
?lapply
endInd <- sapply(dat, function(x) which.max(is.na(x)) )
endInd
endInd <- apply(dat, function(x) which.max(is.na(x)) )
endInd <- lapply(dat, function(x) which.max(is.na(x)) )
?apply
endInd <- apply(dat, function(x) which.max(is.na(x)) )
endInd <- apply(dat, FUN = function(x) which.max(is.na(x)) )
which.max(is.na(dat[,1]))
which.max(is.na(dat[,2]))
which.max(is.na(dat[,5]))
which.max(is.na(dat[,6]))
which.max(is.na(dat[,3]))
which.max(is.na(dat[,4]))
autoplot(dat[1:122,1])
dat <- ts(dat)
autoplot(dat[1:122,1])
autoplot(dat[,1])
lapply(dat, autoplot())
?atr
?attr
timeSeries <- dat[,1]
dat <- read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
as.list(dat)
autoplot(dat[,1])
?as.data.frame.ts
lapply(dat, as.data.frame.ts)
dat <- lapply(dat, as.data.frame.ts)
library(dplyr)
dat <- lapply(dat, function(x) na.omit() )
dat <- lapply(dat, function(x) na.omit(x) )
dat <- read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
dat <- lapply(dat, as.data.frame.ts)
dat <- lapply(dat, function(x) na.omit(x) )
dat[,1]
dat$`Series 1`
dat$`Series 5`
autoplot(dat$`Series 1`)
lapply(dat, ts())
dat <- lapply(dat, function(x) ts(x) )
autoplot(dat[,1])
autoplot(dat$`Series 1`)
dat <- read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
as.list(dat)
dat <- lapply(dat, as.data.frame.ts)
%>% lapply(dat, function(x) na.omit(x) )
%>% lapply(dat, function(x) ts(x) )
dat <- as.list(dat)
dat <- lapply(dat, as.data.frame.ts)
%>% lapply(dat, function(x) na.omit(x) )
%>% lapply(dat, function(x) ts(x) )
dat <- read_excel("~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/lab1_data.xls")
as.list(dat)
dat <- lapply(dat, as.data.frame.ts)
dat <- lapply(dat, function(x) na.omit(x) )
dat <- lapply(dat, function(x) ts(x) )
autoplot(dat$`Series 1`)
autoplot(dat$`Series 2`)
autoplot(dat$`Series 3`)
autoplot(dat$`Series 5`)
autoplot(dat$`Series 5`, xlab = "Time", ylab = "f(t)", ts.colour = 'blue')
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'red')
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3')
packages <- c("ggplot2", "readxl", "ggfortify", "dplyr", "ggthemes")
lapply(packages, library, character.only = TRUE)
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') + theme_bw()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') + theme_economist()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') + theme_economist_white()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value") + theme_economist_white()
theme_igray()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_igray()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_solarized()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_tufte()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_light()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_classic()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_few()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_hc()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_pander()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_wsj()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_stata()
autoplot(dat$`Series 5`, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_tufte()
timeSeriesPlot <- function(x) {
autoplot(x, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_tufte()
}
lapply(dat)
lapply(dat, FUN = timeSeriesPlot)
timeSeriesPlot <- function(x) {
autoplot(x, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_fivethirtyeight()
}
lapply(dat, FUN = timeSeriesPlot)
timeSeriesPlot <- function(x) {
autoplot(x, xlab = "Time", ylab = "Value", ts.colour = 'dodgerblue3') +
theme_classic()
}
lapply(dat, FUN = timeSeriesPlot)
install.packages("cowplot")
library(cowplot)
TS <- lapply(dat, FUN = timeSeriesPlot)
TS
plots <- lapply(dat, FUN = timeSeriesPlot)
plot_grid(plots)
plot_grid(plots$`Series 1`, plots$`Series 2`, plots$`Series 3`, plots$`Series 4`, plots$`Series 5`, plots$`Series 6`, ncol = 2)
setwd(dir)
setwd(dir = "C:\Users\Dan Jordan\Documents\Economics & Finance\3rd Year Sem 1\Time Series Analysis\Labs\Lab 1")
?ggsave
?do.call
do.calls("plot_grid", c(plots))
do.call("plot_grid", c(plots))
do.call("plot_grid", c(plots, ncol = 2))
cowplot::ggsave(filename = "Time Series Plot", path = "~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1", width = 1200, height = 800)
cowplot::ggsave(filename = "Time Series Plot", path = "~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1", width = 12, height = 8)
cowplot::ggsave(filename = "Time Series Plot", width = 12, height = 8)
ggsave(filename = "Time Series Plot", width = 12, height = 8)
ggsave(filename = "Time Series Plot")
ggsave(filename = "~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/Time Series Plot")
timeSeriesPlots <- lapply(dat, FUN = timeSeriesPlot)
do.call("plot_grid", c(plots, ncol = 2))
ggsave(filename = "~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/Time Se
ries Plot")
ggplot::ggsave(filename = "~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/Time Series Plot")
ggplot2::ggsave(filename = "~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/Time Series Plot")
ggplot2::ggsave()
ggplot2::ggsave(file = "TimeSeriesPlots.png")
setwd(dir = "~/Economics & Finance/3rd Year Sem 1/Time Series Analysis/Labs/Lab 1/")
ggplot2::ggsave(file = "TimeSeriesPlots.png")
